{
	"info": {
		"_postman_id": "9797daef-af8d-4bb6-8bd9-ae175d88c737",
		"name": "Data Resource Generator Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Generate resource",
			"item": [
				{
					"name": "Get all schemas",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8081/tableschema",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8081",
							"path": [
								"tableschema"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put People tableschema",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tableschema\": {\n\t    \"api\": {\n\t        \"resource\": \"people\",\n\t        \"methods\": [\n\t            {\n\t                \"get\": {\"enabled\": true, \"secured\": false, \"grants\": [\"get:users\"]},\n\t                \"post\": {\"enabled\": true, \"secured\": false},\n\t                \"put\": {\"enabled\": true, \"secured\": false},\n\t                \"patch\": {\"enabled\": true, \"secured\": false},\n\t                \"delete\": {\"enabled\": true, \"secured\": false}\n\t            }\n\t        ]\n\t    },\n\t    \"datastore\": {\n\t        \"tablename\": \"people\",\n\t        \"schema\": {\n\t            \"fields\": [\n\t                {\n\t                    \"name\": \"id\",\n\t                    \"title\": \"Person ID\",\n\t                    \"type\": \"integer\",\n\t                    \"description\": \"A unique identifer for person.\",\n\t                    \"required\": false\n\t                },\n\t                {\n\t                    \"name\": \"name\",\n\t                    \"title\": \"Person's Name\",\n\t                    \"type\": \"string\",\n\t                    \"description\": \"The name that a Person goes by. This is left intentionally generic.\",\n\t                    \"required\": false\n\t                }\n\t            ],\n\t            \"primaryKey\": \"id\"\n\t        }\n\t    }\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8081/tableschema/1",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8081",
							"path": [
								"tableschema",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put Team tableschema",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tableschema\": {\n\t\t\"api\": {\n\t        \"resource\": \"team\",\n\t        \"methods\": [\n\t            {\n\t                \"get\": {\"enabled\": true, \"secured\": false, \"grants\": [\"get:users\"]},\n\t                \"post\": {\"enabled\": true, \"secured\": false},\n\t                \"put\": {\"enabled\": true, \"secured\": false},\n\t                \"patch\": {\"enabled\": true, \"secured\": false},\n\t                \"delete\": {\"enabled\": true, \"secured\": false}\n\t            }\n\t        ]\n\t    },\n\t    \"datastore\": {\n\t        \"tablename\": \"team\",\n\t        \"schema\": {\n\t            \"fields\": [\n\t                {\n\t                    \"name\": \"id\",\n\t                    \"title\": \"Team ID\",\n\t                    \"type\": \"integer\",\n\t                    \"description\": \"A unique identifer for team.\",\n\t                    \"required\": false\n\t                },\n\t                {\n\t                    \"name\": \"name\",\n\t                    \"title\": \"Team Name\",\n\t                    \"type\": \"string\",\n\t                    \"description\": \"The name that a Team goes by.\",\n\t                    \"required\": false\n\t                }\n\t            ],\n\t            \"primaryKey\": \"id\"\n\t        }\t\n\t    }\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8081/tableschema/2",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8081",
							"path": [
								"tableschema",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put Order tableschema",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"tableschema\": {\n\t\t\"api\": {\n\t        \"resource\": \"order\",\n\t        \"methods\": [\n\t            {\n\t                \"get\": {\"enabled\": true, \"secured\": false, \"grants\": [\"get:users\"]},\n\t                \"post\": {\"enabled\": true, \"secured\": false},\n\t                \"put\": {\"enabled\": true, \"secured\": false},\n\t                \"patch\": {\"enabled\": true, \"secured\": false},\n\t                \"delete\": {\"enabled\": true, \"secured\": false}\n\t            }\n\t        ]\n\t    },\n\t    \"datastore\": {\n\t        \"tablename\": \"order\",\n\t        \"schema\": {\t\n\t            \"fields\": [\n\t                {\n\t                    \"name\": \"id\",\n\t                    \"title\": \"Order ID\",\n\t                    \"type\": \"integer\",\n\t                    \"description\": \"Unique identifer for an Order.\",\n\t                    \"required\": false\n\t                },\n\t                {\n\t                    \"name\": \"items\",\n\t                    \"title\": \"Items in Order\",\n\t                    \"type\": \"string\",\n\t                    \"description\": \"Textual list of items in order.\",\n\t                    \"required\": false\n\t                }\n\t            ],\n\t            \"primaryKey\": \"id\"\n\t        }\t\n\t    }\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8081/tableschema/3",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8081",
							"path": [
								"tableschema",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all swagger",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data\": \"asdfasdf\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8081/swagger",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8081",
							"path": [
								"swagger"
							]
						}
					},
					"response": []
				},
				{
					"name": "Run Data Resource Generator PEOPLE",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"data_catalog\": {\n\t\t\"@id\": \"https://mydatatrust.brighthive.io/dr1\",\n\t\t\"@type\": \"dataResource\",\n\t\t\"name\": \"2020 Census Data\",\n\t\t\"description\": \"Description of data resource\",\n\t\t\"owner\": \"org\",\n\t\t\"pointOfContact\": \"Tim the Pointman\",\n\t\t\"published\": true,\n\t\t\"dateCreated\": \"date\",\n\t\t\"dateUpdated\": \"date\",\n\t\t\"privacyRegulations\": [\"https://datatrust.org/privacyregulations/HIPAA\"],\n\t\t\"category\": \"https://datatrust.org/catagory/external\",\n\t\t\"url\": \"https://mydatatrust.brighthive.io/dr1\",\n\t\t\"data\": {\n\t\t\t\"dataDictionary\": [{\n\t\t\t\t\"@id\": \"https://mydatatrust.brighthive.io/dr1/People\",\n\t\t\t\t\"@type\": \"table\",\n\t\t\t\t\"name\": \"People\",\n\t\t\t\t\"tableSchema\": {\n\t\t\t\t\t\"fields\": [{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"title\": \"Person ID\",\n\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\"description\": \"A unique identifer for person.\",\n\t\t\t\t\t\t\"constraints\": {}\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\t\"title\": \"Person's name\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"description\": \"The name that a Person goes by. This is left intentionally generic.\",\n\t\t\t\t\t\t\"constraints\": {}\n\t\t\t\t\t}],\n\t\t\t\t\t\"primaryKey\": \"id\",\n\t\t\t\t\t\"missingValues\": []\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\t\"@id\": \"https://mydatatrust.brighthive.io/dr1/Team\",\n\t\t\t\t\"@type\": \"table\",\n\t\t\t\t\"name\": \"Team\",\n\t\t\t\t\"tableSchema\": {\n\t\t\t\t\t\"fields\": [{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"title\": \"Team ID\",\n\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\"description\": \"A unique identifer for team.\",\n\t\t\t\t\t\t\"constraints\": {}\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"name\": \"name\",\n\t\t\t\t\t\t\"title\": \"Team Name\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"description\": \"The name that a Team goes by.\",\n\t\t\t\t\t\t\"constraints\": {}\n\t\t\t\t\t}],\n\t\t\t\t\t\"primaryKey\": \"id\",\n\t\t\t\t\t\"missingValues\": []\n\t\t\t\t}\n\t\t\t}, {\n\t\t\t\t\"@id\": \"https://mydatatrust.brighthive.io/dr1/Order\",\n\t\t\t\t\"@type\": \"table\",\n\t\t\t\t\"name\": \"Order\",\n\t\t\t\t\"tableSchema\": {\n\t\t\t\t\t\"fields\": [{\n\t\t\t\t\t\t\"name\": \"id\",\n\t\t\t\t\t\t\"title\": \"Order ID\",\n\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\"description\": \"Unique identifer for an Order.\",\n\t\t\t\t\t\t\"constraints\": {}\n\t\t\t\t\t}, {\n\t\t\t\t\t\t\"name\": \"items\",\n\t\t\t\t\t\t\"title\": \"Items in Order\",\n\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\"description\": \"Textual list of items in order.\",\n\t\t\t\t\t\t\"constraints\": {}\n\t\t\t\t\t}],\n\t\t\t\t\t\"primaryKey\": \"id\",\n\t\t\t\t\t\"missingValues\": []\n\t\t\t\t}\n\t\t\t}],\n\t\t\t\"relationships\": {\n\t\t\t\t\"oneToMany\": [\n\t\t\t\t\t[\"People\", \"Order\"]\n\t\t\t\t],\n\t\t\t\t\"manyToMany\": [\n\t\t\t\t\t[\"People\", \"Team\"]\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"databaseSchema\": \"url-to-something\",\n\t\t\t\"databaseType\": \"https://datatrust.org/databaseType/rdbms\"\n\t\t},\n\t\t\"api\": {\n    \"apiType\": \"https://datatrust.org/apiType/rest\",\n    \"apiSpec\": {\n    \"openapi\": \"3.0.0\",\n    \"info\": {\n        \"title\": \"Swagger Data Resource\",\n        \"description\": \"Autogenerated Data Resource API swagger file.  You can find\\nout more about Swagger at\\n[http://swagger.io](http://swagger.io) or on\\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\\n\",\n        \"termsOfService\": \"http://swagger.io/terms/\",\n        \"contact\": {\n            \"email\": \"engineering@brighthive.io\"\n        },\n        \"license\": {\n            \"name\": \"Apache 2.0\",\n            \"url\": \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n        },\n        \"version\": \"1.0.0\"\n    },\n    \"servers\": [\n        {\n            \"description\": \"Local server.\",\n            \"url\": \"http://localhost:8000\"\n        }\n    ],\n    \"components\": {\n        \"parameters\": {\n            \"offsetParam\": {\n                \"name\": \"offset\",\n                \"in\": \"query\",\n                \"description\": \"the offset\",\n                \"required\": false,\n                \"style\": \"form\",\n                \"explode\": true,\n                \"schema\": {\n                \"type\": \"integer\"\n                }\n            },\n            \"limitParam\": {\n                \"name\": \"limit\",\n                \"in\": \"query\",\n                \"description\": \"the limit\",\n                \"required\": false,\n                \"style\": \"form\",\n                \"explode\": true,\n                \"schema\": {\n                \"type\": \"integer\"\n                }\n            }\n        },\n        \"schemas\": {\n            \"Links\": {\n                \"type\": \"object\",\n                \"properties\": {\n                \"rel\": {\n                    \"type\": \"string\",\n                    \"description\": \"...\",\n                    \"example\": \"first\",\n                    \"enum\": [\n                        \"self\",\n                        \"first\",\n                        \"prev\",\n                        \"next\",\n                        \"last\"\n                    ]\n                },\n                \"href\": {\n                    \"type\": \"string\",\n                    \"description\": \"...\",\n                    \"example\": \"/credential?offset=0&limit=20\"\n                }\n                },\n                \"description\": \"...\"\n            },\n            \"Created\": {\n                \"type\": \"object\",\n                \"properties\": {\n                \"message\": {\n                    \"type\": \"string\",\n                    \"description\": \"...\",\n                    \"example\": \"Successfully added new resource.\"\n                },\n                \"id\": {\n                    \"type\": \"integer\",\n                    \"description\": \"...\",\n                    \"format\": \"int64\",\n                    \"example\": 1\n                }\n                }\n            },\n            \"People\": {\n                \"type\": \"object\",\n                \"properties\": {\n                \"id\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int64\",\n                    \"description\": \"Person ID - A unique identifer for person.\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Person's Name - The name that a Person goes by. This is left intentionally generic.\"\n                }\n                },\n                \"description\": \"...\"\n            },\n            \"AllPeople\": {\n                \"type\": \"object\",\n                \"properties\": {\n                \"people\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/components/schemas/People\"\n                    }\n                },\n                \"links\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/components/schemas/Links\"\n                    }\n                }\n                },\n                \"description\": \"...\"\n            },\n            \"Team\": {\n                \"type\": \"object\",\n                \"properties\": {\n                \"id\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int64\",\n                    \"description\": \"Team ID - A unique identifer for team.\"\n                },\n                \"name\": {\n                    \"type\": \"string\",\n                    \"description\": \"Team Name - The name that a Team goes by.\"\n                }\n                },\n                \"description\": \"...\"\n            },\n            \"AllTeam\": {\n                \"type\": \"object\",\n                \"properties\": {\n                \"team\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/components/schemas/Team\"\n                    }\n                },\n                \"links\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/components/schemas/Links\"\n                    }\n                }\n                },\n                \"description\": \"...\"\n            },\n            \"Order\": {\n                \"type\": \"object\",\n                \"properties\": {\n                \"id\": {\n                    \"type\": \"integer\",\n                    \"format\": \"int64\",\n                    \"description\": \"Order ID - Unique identifer for an Order.\"\n                },\n                \"items\": {\n                    \"type\": \"string\",\n                    \"description\": \"Items in Order - Textual list of items in order.\"\n                }\n                },\n                \"description\": \"...\"\n            },\n            \"AllOrder\": {\n                \"type\": \"object\",\n                \"properties\": {\n                \"order\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/components/schemas/Order\"\n                    }\n                },\n                \"links\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                        \"$ref\": \"#/components/schemas/Links\"\n                    }\n                }\n                },\n                \"description\": \"...\"\n            }\n        },\n        \"responses\": {\n            \"Created\": {\n                \"description\": \"...\",\n                \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/components/schemas/Created\"\n                    }\n                }\n                }\n            },\n            \"AllPeople\": {\n                \"description\": \"...\",\n                \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/components/schemas/AllPeople\"\n                    }\n                }\n                }\n            },\n            \"AllTeam\": {\n                \"description\": \"...\",\n                \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/components/schemas/AllTeam\"\n                    }\n                }\n                }\n            },\n            \"AllOrder\": {\n                \"description\": \"...\",\n                \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/components/schemas/AllOrder\"\n                    }\n                }\n                }\n            }\n        },\n        \"requestBodies\": {\n            \"People\": {\n                \"description\": \"Pet object that needs to be added to the store\",\n                \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/components/schemas/People\"\n                    }\n                }\n                },\n                \"required\": true\n            },\n            \"Team\": {\n                \"description\": \"Pet object that needs to be added to the store\",\n                \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/components/schemas/Team\"\n                    }\n                }\n                },\n                \"required\": true\n            },\n            \"Order\": {\n                \"description\": \"Pet object that needs to be added to the store\",\n                \"content\": {\n                \"application/json\": {\n                    \"schema\": {\n                        \"$ref\": \"#/components/schemas/Order\"\n                    }\n                }\n                },\n                \"required\": true\n            }\n        }\n    },\n    \"tags\": [\n        {\n            \"name\": \"people\",\n            \"description\": \"...\",\n            \"externalDocs\": {\n                \"description\": \"Find out more\",\n                \"url\": \"http://swagger.io\"\n            }\n        },\n        {\n            \"name\": \"team\",\n            \"description\": \"...\",\n            \"externalDocs\": {\n                \"description\": \"Find out more\",\n                \"url\": \"http://swagger.io\"\n            }\n        },\n        {\n            \"name\": \"order\",\n            \"description\": \"...\",\n            \"externalDocs\": {\n                \"description\": \"Find out more\",\n                \"url\": \"http://swagger.io\"\n            }\n        }\n    ],\n    \"paths\": {\n        \"/people\": {\n            \"get\": {\n                \"tags\": [\n                \"people\"\n                ],\n                \"summary\": \"Get all items\",\n                \"parameters\": [\n                {\n                    \"$ref\": \"#/components/parameters/offsetParam\"\n                },\n                {\n                    \"$ref\": \"#/components/parameters/limitParam\"\n                }\n                ],\n                \"responses\": {\n                \"200\": {\n                    \"$ref\": \"#/components/responses/AllPeople\"\n                }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                \"people\"\n                ],\n                \"summary\": \"Create an item\",\n                \"requestBody\": {\n                \"$ref\": \"#/components/requestBodies/People\"\n                },\n                \"responses\": {\n                \"201\": {\n                    \"$ref\": \"#/components/responses/Created\"\n                }\n                }\n            }\n        },\n        \"/people/query\": {\n            \"post\": {\n                \"tags\": [\n                \"people\"\n                ],\n                \"summary\": \"Query for items.\",\n                \"requestBody\": {\n                \"$ref\": \"#/components/requestBodies/People\"\n                },\n                \"responses\": {\n                \"201\": {\n                    \"$ref\": \"#/components/responses/Created\"\n                }\n                }\n            }\n        },\n        \"/people/{id}\": {\n            \"get\": {\n                \"tags\": [\n                \"people\"\n                ],\n                \"summary\": \"Get one item\",\n                \"parameters\": [\n                {\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"User ID\",\n                    \"required\": true,\n                    \"style\": \"simple\",\n                    \"explode\": false,\n                    \"schema\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    }\n                }\n                ],\n                \"responses\": {\n                \"200\": {\n                    \"description\": \"ok\"\n                }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                \"people\"\n                ],\n                \"summary\": \"Put one item\",\n                \"parameters\": [\n                {\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"User ID\",\n                    \"required\": true,\n                    \"style\": \"simple\",\n                    \"explode\": false,\n                    \"schema\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    }\n                }\n                ],\n                \"requestBody\": {\n                \"$ref\": \"#/components/requestBodies/People\"\n                },\n                \"responses\": {\n                \"200\": {\n                    \"description\": \"ok\"\n                }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                \"people\"\n                ],\n                \"summary\": \"Get one item\",\n                \"parameters\": [\n                {\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"User ID\",\n                    \"required\": true,\n                    \"style\": \"simple\",\n                    \"explode\": false,\n                    \"schema\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    }\n                }\n                ],\n                \"responses\": {\n                \"200\": {\n                    \"description\": \"ok\"\n                }\n                }\n            },\n            \"patch\": {\n                \"tags\": [\n                \"people\"\n                ],\n                \"summary\": \"Get one item\",\n                \"parameters\": [\n                {\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"User ID\",\n                    \"required\": true,\n                    \"style\": \"simple\",\n                    \"explode\": false,\n                    \"schema\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    }\n                }\n                ],\n                \"requestBody\": {\n                \"$ref\": \"#/components/requestBodies/People\"\n                },\n                \"responses\": {\n                \"200\": {\n                    \"description\": \"ok\"\n                }\n                }\n            }\n        },\n        \"/team\": {\n            \"get\": {\n                \"tags\": [\n                \"team\"\n                ],\n                \"summary\": \"Get all items\",\n                \"parameters\": [\n                {\n                    \"$ref\": \"#/components/parameters/offsetParam\"\n                },\n                {\n                    \"$ref\": \"#/components/parameters/limitParam\"\n                }\n                ],\n                \"responses\": {\n                \"200\": {\n                    \"$ref\": \"#/components/responses/AllTeam\"\n                }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                \"team\"\n                ],\n                \"summary\": \"Create an item\",\n                \"requestBody\": {\n                \"$ref\": \"#/components/requestBodies/Team\"\n                },\n                \"responses\": {\n                \"201\": {\n                    \"$ref\": \"#/components/responses/Created\"\n                }\n                }\n            }\n        },\n        \"/team/query\": {\n            \"post\": {\n                \"tags\": [\n                \"team\"\n                ],\n                \"summary\": \"Query for items.\",\n                \"requestBody\": {\n                \"$ref\": \"#/components/requestBodies/Team\"\n                },\n                \"responses\": {\n                \"201\": {\n                    \"$ref\": \"#/components/responses/Created\"\n                }\n                }\n            }\n        },\n        \"/team/{id}\": {\n            \"get\": {\n                \"tags\": [\n                \"team\"\n                ],\n                \"summary\": \"Get one item\",\n                \"parameters\": [\n                {\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"User ID\",\n                    \"required\": true,\n                    \"style\": \"simple\",\n                    \"explode\": false,\n                    \"schema\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    }\n                }\n                ],\n                \"responses\": {\n                \"200\": {\n                    \"description\": \"ok\"\n                }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                \"team\"\n                ],\n                \"summary\": \"Put one item\",\n                \"parameters\": [\n                {\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"User ID\",\n                    \"required\": true,\n                    \"style\": \"simple\",\n                    \"explode\": false,\n                    \"schema\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    }\n                }\n                ],\n                \"requestBody\": {\n                \"$ref\": \"#/components/requestBodies/Team\"\n                },\n                \"responses\": {\n                \"200\": {\n                    \"description\": \"ok\"\n                }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                \"team\"\n                ],\n                \"summary\": \"Get one item\",\n                \"parameters\": [\n                {\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"User ID\",\n                    \"required\": true,\n                    \"style\": \"simple\",\n                    \"explode\": false,\n                    \"schema\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    }\n                }\n                ],\n                \"responses\": {\n                \"200\": {\n                    \"description\": \"ok\"\n                }\n                }\n            },\n            \"patch\": {\n                \"tags\": [\n                \"team\"\n                ],\n                \"summary\": \"Get one item\",\n                \"parameters\": [\n                {\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"User ID\",\n                    \"required\": true,\n                    \"style\": \"simple\",\n                    \"explode\": false,\n                    \"schema\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    }\n                }\n                ],\n                \"requestBody\": {\n                \"$ref\": \"#/components/requestBodies/Team\"\n                },\n                \"responses\": {\n                \"200\": {\n                    \"description\": \"ok\"\n                }\n                }\n            }\n        },\n        \"/order\": {\n            \"get\": {\n                \"tags\": [\n                \"order\"\n                ],\n                \"summary\": \"Get all items\",\n                \"parameters\": [\n                {\n                    \"$ref\": \"#/components/parameters/offsetParam\"\n                },\n                {\n                    \"$ref\": \"#/components/parameters/limitParam\"\n                }\n                ],\n                \"responses\": {\n                \"200\": {\n                    \"$ref\": \"#/components/responses/AllOrder\"\n                }\n                }\n            },\n            \"post\": {\n                \"tags\": [\n                \"order\"\n                ],\n                \"summary\": \"Create an item\",\n                \"requestBody\": {\n                \"$ref\": \"#/components/requestBodies/Order\"\n                },\n                \"responses\": {\n                \"201\": {\n                    \"$ref\": \"#/components/responses/Created\"\n                }\n                }\n            }\n        },\n        \"/order/query\": {\n            \"post\": {\n                \"tags\": [\n                \"order\"\n                ],\n                \"summary\": \"Query for items.\",\n                \"requestBody\": {\n                \"$ref\": \"#/components/requestBodies/Order\"\n                },\n                \"responses\": {\n                \"201\": {\n                    \"$ref\": \"#/components/responses/Created\"\n                }\n                }\n            }\n        },\n        \"/order/{id}\": {\n            \"get\": {\n                \"tags\": [\n                \"order\"\n                ],\n                \"summary\": \"Get one item\",\n                \"parameters\": [\n                {\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"User ID\",\n                    \"required\": true,\n                    \"style\": \"simple\",\n                    \"explode\": false,\n                    \"schema\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    }\n                }\n                ],\n                \"responses\": {\n                \"200\": {\n                    \"description\": \"ok\"\n                }\n                }\n            },\n            \"put\": {\n                \"tags\": [\n                \"order\"\n                ],\n                \"summary\": \"Put one item\",\n                \"parameters\": [\n                {\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"User ID\",\n                    \"required\": true,\n                    \"style\": \"simple\",\n                    \"explode\": false,\n                    \"schema\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    }\n                }\n                ],\n                \"requestBody\": {\n                \"$ref\": \"#/components/requestBodies/Order\"\n                },\n                \"responses\": {\n                \"200\": {\n                    \"description\": \"ok\"\n                }\n                }\n            },\n            \"delete\": {\n                \"tags\": [\n                \"order\"\n                ],\n                \"summary\": \"Get one item\",\n                \"parameters\": [\n                {\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"User ID\",\n                    \"required\": true,\n                    \"style\": \"simple\",\n                    \"explode\": false,\n                    \"schema\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    }\n                }\n                ],\n                \"responses\": {\n                \"200\": {\n                    \"description\": \"ok\"\n                }\n                }\n            },\n            \"patch\": {\n                \"tags\": [\n                \"order\"\n                ],\n                \"summary\": \"Get one item\",\n                \"parameters\": [\n                {\n                    \"name\": \"id\",\n                    \"in\": \"path\",\n                    \"description\": \"User ID\",\n                    \"required\": true,\n                    \"style\": \"simple\",\n                    \"explode\": false,\n                    \"schema\": {\n                        \"type\": \"integer\",\n                        \"format\": \"int64\"\n                    }\n                }\n                ],\n                \"requestBody\": {\n                \"$ref\": \"#/components/requestBodies/Order\"\n                },\n                \"responses\": {\n                \"200\": {\n                    \"description\": \"ok\"\n                }\n                }\n            }\n        },\n        \"/people/{id}/team\": {\"get\": {}, \"put\": {}, \"patch\": {}},\n        \"/team/{id}/people\": {\"get\": {}, \"put\": {}, \"patch\": {}}\n    }\n}\n}\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8081/generator",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8081",
							"path": [
								"generator"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Set relationships",
			"item": [
				{
					"name": "Create a person",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8081/people/1",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8081",
							"path": [
								"people",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a team",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"team1\"\n}"
						},
						"url": {
							"raw": "http://0.0.0.0:8081/team/1",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8081",
							"path": [
								"team",
								"1"
							]
						}
					},
					"response": [
						{
							"name": "ok",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/team/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"team",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get people 1 / teams relationships",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://0.0.0.0:8081/people/1/team",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8081",
							"path": [
								"people",
								"1",
								"team"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set people 1 team relationships",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[1]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8081/people/1/team",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8081",
							"path": [
								"people",
								"1",
								"team"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a second team",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"team2\"\n}"
						},
						"url": {
							"raw": "http://0.0.0.0:8081/team/2",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8081",
							"path": [
								"team",
								"2"
							]
						}
					},
					"response": [
						{
							"name": "ok",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/team/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"team",
										":id"
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add to people 1 team relationships",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[2]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://0.0.0.0:8081/people/1/team",
							"protocol": "http",
							"host": [
								"0",
								"0",
								"0",
								"0"
							],
							"port": "8081",
							"path": [
								"people",
								"1",
								"team"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e3df92b4-01a5-459d-8e30-f90c36e4a443",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ce384c82-48c6-4353-b0f5-e99dcaaefe8c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}