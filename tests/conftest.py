import pytest
from data_resource.db import engine, Session, MetadataSingleton
from sqlalchemy import MetaData
from sqlalchemy.exc import OperationalError
from sqlalchemy.sql import text
from data_resource.main import run


DATA_DICTIONARY = {
    "@id": "https://mydatatrust.brighthive.io/dr1",
    "@type": "dataResource",
    "name": "2020 Census Data",
    "description": "Description of data resource",
    "owner": "org",
    "pointOfContact": "Tim the Pointman",  # probably a person node
    "published": True,
    "dateCreated": "date",
    "dateUpdated": "date",
    "privacyRegulations": ["https://datatrust.org/privacyregulations/HIPAA"],
    "category": "https://datatrust.org/catagory/external",
    "url": "https://mydatatrust.brighthive.io/dr1",
    "data": {
        "dataDictionary": [
            {
                "@id": "https://mydatatrust.brighthive.io/dr1/People",
                "@type": "table",
                "name": "People",
                "tableSchema": {
                    "fields": [
                        {
                            "name": "id",
                            "title": "Person ID",
                            "type": "integer",
                            "description": "A unique identifer for person.",
                            "constraints": {},
                        },
                        {
                            "name": "name",
                            "title": "Person's Name",
                            "type": "string",
                            "description": "The name that a Person goes by. This is left intentionally generic.",
                            "constraints": {},
                        },
                    ],
                    "primaryKey": "id",
                    "missingValues": [],
                },
            },
            {
                "@id": "https://mydatatrust.brighthive.io/dr1/Team",
                "@type": "table",
                "name": "Team",
                "tableSchema": {
                    "fields": [
                        {
                            "name": "id",
                            "title": "Team ID",
                            "type": "integer",
                            "description": "A unique identifer for team.",
                            "constraints": {},
                        },
                        {
                            "name": "name",
                            "title": "Team Name",
                            "type": "string",
                            "description": "The name that a Team goes by.",
                            "constraints": {},
                        },
                    ],
                    "primaryKey": "id",
                    "missingValues": [],
                },
            },
            {
                "@id": "https://mydatatrust.brighthive.io/dr1/Order",
                "@type": "table",
                "name": "Order",
                "tableSchema": {
                    "fields": [
                        {
                            "name": "id",
                            "title": "Order ID",
                            "type": "integer",
                            "description": "Unique identifer for an Order.",
                            "constraints": {},
                        },
                        {
                            "name": "items",
                            "title": "Items in Order",
                            "type": "string",
                            "description": "Textual list of items in order.",
                            "constraints": {},
                        },
                    ],
                    "primaryKey": "id",
                    "missingValues": [],
                },
            },
        ],
        "relationships": {
            # "oneToOne": [["People", "haveA", "Passport"],
            "oneToMany": [["People", "Order"]],
            "manyToMany": [["People", "Team"]],
        },
        "databaseSchema": "url-to-something",
        "databaseType": "https://datatrust.org/databaseType/rdbms",
    },
    "api": {
        "apiType": "https://datatrust.org/apiType/rest",
        "apiSpec": {
            "openapi": "3.0.0",
            "info": {
                "title": "Swagger Data Resource",
                "description": "Autogenerated Data Resource API swagger file.  You can find\nout more about Swagger at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n",
                "termsOfService": "http://swagger.io/terms/",
                "contact": {"email": "engineering@brighthive.io"},
                "license": {
                    "name": "Apache 2.0",
                    "url": "http://www.apache.org/licenses/LICENSE-2.0.html",
                },
                "version": "1.0.0",
            },
            "servers": [
                {"description": "Local server.", "url": "http://localhost:8000"}
            ],
            "components": {
                "parameters": {
                    "offsetParam": {
                        "name": "offset",
                        "in": "query",
                        "description": "the offset",
                        "required": False,
                        "style": "form",
                        "explode": True,
                        "schema": {"type": "integer"},
                    },
                    "limitParam": {
                        "name": "limit",
                        "in": "query",
                        "description": "the limit",
                        "required": False,
                        "style": "form",
                        "explode": True,
                        "schema": {"type": "integer"},
                    },
                },
                "schemas": {
                    "Links": {
                        "type": "object",
                        "properties": {
                            "rel": {
                                "type": "string",
                                "description": "...",
                                "example": "first",
                                "enum": ["self", "first", "prev", "next", "last"],
                            },
                            "href": {
                                "type": "string",
                                "description": "...",
                                "example": "/credentials?offset=0&limit=20",
                            },
                        },
                        "description": "...",
                    },
                    "Created": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string",
                                "description": "...",
                                "example": "Successfully added new resource.",
                            },
                            "id": {
                                "type": "integer",
                                "description": "...",
                                "format": "int64",
                                "example": 1,
                            },
                        },
                    },
                    "Framework": {
                        "required": [
                            "framework_name",
                            "framework_description",
                            "framework_url",
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Framework ID - framework's unique identifier",
                            },
                            "framework_name": {
                                "type": "string",
                                "description": "framework Name - framework's name.",
                            },
                            "framework_description": {
                                "type": "string",
                                "description": "framework Description - framework's Description",
                            },
                            "framework_url": {
                                "type": "string",
                                "description": "framework URL - framework's webpage url",
                            },
                        },
                        "description": "...",
                    },
                    "AllFrameworks": {
                        "type": "object",
                        "properties": {
                            "frameworks": {
                                "type": "array",
                                "items": {
                                    "required": [
                                        "framework_name",
                                        "framework_description",
                                        "framework_url",
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "Framework ID - framework's unique identifier",
                                        },
                                        "framework_name": {
                                            "type": "string",
                                            "description": "framework Name - framework's name.",
                                        },
                                        "framework_description": {
                                            "type": "string",
                                            "description": "framework Description - framework's Description",
                                        },
                                        "framework_url": {
                                            "type": "string",
                                            "description": "framework URL - framework's webpage url",
                                        },
                                    },
                                    "description": "...",
                                },
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "rel": {
                                            "type": "string",
                                            "description": "...",
                                            "example": "first",
                                            "enum": [
                                                "self",
                                                "first",
                                                "prev",
                                                "next",
                                                "last",
                                            ],
                                        },
                                        "href": {
                                            "type": "string",
                                            "description": "...",
                                            "example": "/credentials?offset=0&limit=20",
                                        },
                                    },
                                    "description": "...",
                                },
                            },
                        },
                        "description": "...",
                    },
                    "Skill": {
                        "required": ["text"],
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Skill ID - Skill's unique identifier",
                            },
                            "text": {
                                "type": "string",
                                "description": "Skill text - Skill's text",
                            },
                        },
                        "description": "...",
                    },
                    "AllSkills": {
                        "type": "object",
                        "properties": {
                            "skills": {
                                "type": "array",
                                "items": {
                                    "required": ["text"],
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "Skill ID - Skill's unique identifier",
                                        },
                                        "text": {
                                            "type": "string",
                                            "description": "Skill text - Skill's text",
                                        },
                                    },
                                    "description": "...",
                                },
                            },
                            "links": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "rel": {
                                            "type": "string",
                                            "description": "...",
                                            "example": "first",
                                            "enum": [
                                                "self",
                                                "first",
                                                "prev",
                                                "next",
                                                "last",
                                            ],
                                        },
                                        "href": {
                                            "type": "string",
                                            "description": "...",
                                            "example": "/credentials?offset=0&limit=20",
                                        },
                                    },
                                    "description": "...",
                                },
                            },
                        },
                        "description": "...",
                    },
                },
                "responses": {
                    "Created": {
                        "description": "...",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "...",
                                            "example": "Successfully added new resource.",
                                        },
                                        "id": {
                                            "type": "integer",
                                            "description": "...",
                                            "format": "int64",
                                            "example": 1,
                                        },
                                    },
                                }
                            }
                        },
                    },
                    "AllFrameworks": {
                        "description": "...",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "frameworks": {
                                            "type": "array",
                                            "items": {
                                                "required": [
                                                    "framework_name",
                                                    "framework_description",
                                                    "framework_url",
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "Framework ID - framework's unique identifier",
                                                    },
                                                    "framework_name": {
                                                        "type": "string",
                                                        "description": "framework Name - framework's name.",
                                                    },
                                                    "framework_description": {
                                                        "type": "string",
                                                        "description": "framework Description - framework's Description",
                                                    },
                                                    "framework_url": {
                                                        "type": "string",
                                                        "description": "framework URL - framework's webpage url",
                                                    },
                                                },
                                                "description": "...",
                                            },
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string",
                                                        "description": "...",
                                                        "example": "first",
                                                        "enum": [
                                                            "self",
                                                            "first",
                                                            "prev",
                                                            "next",
                                                            "last",
                                                        ],
                                                    },
                                                    "href": {
                                                        "type": "string",
                                                        "description": "...",
                                                        "example": "/credentials?offset=0&limit=20",
                                                    },
                                                },
                                                "description": "...",
                                            },
                                        },
                                    },
                                    "description": "...",
                                }
                            }
                        },
                    },
                    "AllSkills": {
                        "description": "...",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "skills": {
                                            "type": "array",
                                            "items": {
                                                "required": ["text"],
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64",
                                                        "description": "Skill ID - Skill's unique identifier",
                                                    },
                                                    "text": {
                                                        "type": "string",
                                                        "description": "Skill text - Skill's text",
                                                    },
                                                },
                                                "description": "...",
                                            },
                                        },
                                        "links": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "rel": {
                                                        "type": "string",
                                                        "description": "...",
                                                        "example": "first",
                                                        "enum": [
                                                            "self",
                                                            "first",
                                                            "prev",
                                                            "next",
                                                            "last",
                                                        ],
                                                    },
                                                    "href": {
                                                        "type": "string",
                                                        "description": "...",
                                                        "example": "/credentials?offset=0&limit=20",
                                                    },
                                                },
                                                "description": "...",
                                            },
                                        },
                                    },
                                    "description": "...",
                                }
                            }
                        },
                    },
                },
                "requestBodies": {
                    "Framework": {
                        "description": "Pet object that needs to be added to the store",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "framework_name",
                                        "framework_description",
                                        "framework_url",
                                    ],
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "Framework ID - framework's unique identifier",
                                        },
                                        "framework_name": {
                                            "type": "string",
                                            "description": "framework Name - framework's name.",
                                        },
                                        "framework_description": {
                                            "type": "string",
                                            "description": "framework Description - framework's Description",
                                        },
                                        "framework_url": {
                                            "type": "string",
                                            "description": "framework URL - framework's webpage url",
                                        },
                                    },
                                    "description": "...",
                                }
                            }
                        },
                        "required": True,
                    },
                    "Skill": {
                        "description": "Pet object that needs to be added to the store",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": ["text"],
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "format": "int64",
                                            "description": "Skill ID - Skill's unique identifier",
                                        },
                                        "text": {
                                            "type": "string",
                                            "description": "Skill text - Skill's text",
                                        },
                                    },
                                    "description": "...",
                                }
                            }
                        },
                        "required": True,
                    },
                },
            },
            "tags": [
                {
                    "name": "frameworks",
                    "description": "...",
                    "externalDocs": {
                        "description": "Find out more",
                        "url": "http://swagger.io",
                    },
                },
                {
                    "name": "skills",
                    "description": "...",
                    "externalDocs": {
                        "description": "Find out more",
                        "url": "http://swagger.io",
                    },
                },
            ],
            "paths": {
                "/frameworks": {
                    "get": {
                        "operationId": "get_frameworks",
                        "tags": ["frameworks"],
                        "summary": "Get all items",
                        "parameters": [
                            {
                                "name": "offset",
                                "in": "query",
                                "description": "the offset",
                                "required": False,
                                "style": "form",
                                "explode": True,
                                "schema": {"type": "integer"},
                            },
                            {
                                "name": "limit",
                                "in": "query",
                                "description": "the limit",
                                "required": False,
                                "style": "form",
                                "explode": True,
                                "schema": {"type": "integer"},
                            },
                        ],
                        "responses": {
                            "200": {
                                "description": "...",
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "frameworks": {
                                                    "type": "array",
                                                    "items": {
                                                        "required": [
                                                            "framework_name",
                                                            "framework_description",
                                                            "framework_url",
                                                        ],
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "format": "int64",
                                                                "description": "Framework ID - framework's unique identifier",
                                                            },
                                                            "framework_name": {
                                                                "type": "string",
                                                                "description": "framework Name - framework's name.",
                                                            },
                                                            "framework_description": {
                                                                "type": "string",
                                                                "description": "framework Description - framework's Description",
                                                            },
                                                            "framework_url": {
                                                                "type": "string",
                                                                "description": "framework URL - framework's webpage url",
                                                            },
                                                        },
                                                        "description": "...",
                                                    },
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "rel": {
                                                                "type": "string",
                                                                "description": "...",
                                                                "example": "first",
                                                                "enum": [
                                                                    "self",
                                                                    "first",
                                                                    "prev",
                                                                    "next",
                                                                    "last",
                                                                ],
                                                            },
                                                            "href": {
                                                                "type": "string",
                                                                "description": "...",
                                                                "example": "/credentials?offset=0&limit=20",
                                                            },
                                                        },
                                                        "description": "...",
                                                    },
                                                },
                                            },
                                            "description": "...",
                                        }
                                    }
                                },
                            }
                        },
                    },
                    "post": {
                        "operationId": "post_frameworks",
                        "tags": ["frameworks"],
                        "summary": "Create an item",
                        "requestBody": {
                            "description": "Pet object that needs to be added to the store",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "required": [
                                            "framework_name",
                                            "framework_description",
                                            "framework_url",
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "Framework ID - framework's unique identifier",
                                            },
                                            "framework_name": {
                                                "type": "string",
                                                "description": "framework Name - framework's name.",
                                            },
                                            "framework_description": {
                                                "type": "string",
                                                "description": "framework Description - framework's Description",
                                            },
                                            "framework_url": {
                                                "type": "string",
                                                "description": "framework URL - framework's webpage url",
                                            },
                                        },
                                        "description": "...",
                                    }
                                }
                            },
                            "required": True,
                        },
                        "responses": {
                            "201": {
                                "description": "...",
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "description": "...",
                                                    "example": "Successfully added new resource.",
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "description": "...",
                                                    "format": "int64",
                                                    "example": 1,
                                                },
                                            },
                                        }
                                    }
                                },
                            }
                        },
                    },
                },
                "/frameworks/{id}": {
                    "get": {
                        "operationId": "get_frameworks_id",
                        "tags": ["frameworks"],
                        "summary": "Get one item",
                        "parameters": [
                            {
                                "name": "id",
                                "in": "path",
                                "description": "User ID",
                                "required": True,
                                "style": "simple",
                                "explode": False,
                                "schema": {"type": "integer", "format": "int64"},
                            }
                        ],
                        "responses": {"200": {"description": "ok"}},
                    },
                    "put": {
                        "operationId": "put_frameworks_id",
                        "tags": ["frameworks"],
                        "summary": "Put one item",
                        "parameters": [
                            {
                                "name": "id",
                                "in": "path",
                                "description": "User ID",
                                "required": True,
                                "style": "simple",
                                "explode": False,
                                "schema": {"type": "integer", "format": "int64"},
                            }
                        ],
                        "requestBody": {
                            "description": "Pet object that needs to be added to the store",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "required": [
                                            "framework_name",
                                            "framework_description",
                                            "framework_url",
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "Framework ID - framework's unique identifier",
                                            },
                                            "framework_name": {
                                                "type": "string",
                                                "description": "framework Name - framework's name.",
                                            },
                                            "framework_description": {
                                                "type": "string",
                                                "description": "framework Description - framework's Description",
                                            },
                                            "framework_url": {
                                                "type": "string",
                                                "description": "framework URL - framework's webpage url",
                                            },
                                        },
                                        "description": "...",
                                    }
                                }
                            },
                            "required": True,
                        },
                        "responses": {"200": {"description": "ok"}},
                    },
                    "delete": {
                        "operationId": "delete_frameworks_id",
                        "tags": ["frameworks"],
                        "summary": "Get one item",
                        "parameters": [
                            {
                                "name": "id",
                                "in": "path",
                                "description": "User ID",
                                "required": True,
                                "style": "simple",
                                "explode": False,
                                "schema": {"type": "integer", "format": "int64"},
                            }
                        ],
                        "responses": {"200": {"description": "ok"}},
                    },
                    "patch": {
                        "operationId": "patch_frameworks_id",
                        "tags": ["frameworks"],
                        "summary": "Get one item",
                        "parameters": [
                            {
                                "name": "id",
                                "in": "path",
                                "description": "User ID",
                                "required": True,
                                "style": "simple",
                                "explode": False,
                                "schema": {"type": "integer", "format": "int64"},
                            }
                        ],
                        "requestBody": {
                            "description": "Pet object that needs to be added to the store",
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "required": [
                                            "framework_name",
                                            "framework_description",
                                            "framework_url",
                                        ],
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "format": "int64",
                                                "description": "Framework ID - framework's unique identifier",
                                            },
                                            "framework_name": {
                                                "type": "string",
                                                "description": "framework Name - framework's name.",
                                            },
                                            "framework_description": {
                                                "type": "string",
                                                "description": "framework Description - framework's Description",
                                            },
                                            "framework_url": {
                                                "type": "string",
                                                "description": "framework URL - framework's webpage url",
                                            },
                                        },
                                        "description": "...",
                                    }
                                }
                            },
                            "required": True,
                        },
                        "responses": {"200": {"description": "ok"}},
                    },
                },
            },
        },
    },
}


@pytest.fixture
def VALID_DATA_DICTIONARY():
    return DATA_DICTIONARY


class Database:
    def ping(self):
        try:
            session = Session()
            session.query("1").all()
            return True
        except OperationalError:
            raise

    # def table_count(self, table_name):
    #     session = Session()
    #     result = session.execute("SELECT * FROM pg_catalog.pg_tables WHERE schemaname != 'pg_catalog' AND schemaname != 'information_schema'")
    #     for _r in result:
    #         print(_r)

    # def table_fields(self, table_name):
    #     session = Session()
    #     s = text("SELECT * FROM information_schema.COLUMNS WHERE TABLE_NAME = :tblname")
    #     result = session.execute(s, tblname=table_name)
    #     for _r in result:
    #         print(_r)

    def destory_db(self):
        session = Session()
        session.execute("drop schema public cascade")
        session.execute("create schema public")
        session.commit()


class SqlalchemyMetadata:
    def table_count(self):
        metadata = MetadataSingleton.instance()
        return len(metadata.sorted_tables)


@pytest.fixture(scope="function")
def empty_database():
    db = Database()
    db.destory_db()


@pytest.fixture(scope="function")
def database():
    db = Database()
    yield db


@pytest.fixture(scope="module")
def sqlalchemy_metadata():
    sql_metadata = SqlalchemyMetadata()
    yield sql_metadata


@pytest.fixture(scope="session")
def api():
    return run(actually_run=False).test_client()


@pytest.fixture(scope="session")
def e2e_app():
    api_dict = DATA_DICTIONARY["api"]["apiSpec"]

    app = run(api_dict, actually_run=False)

    return app.test_client()
